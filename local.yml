---
- hosts: localhost
  connection: local
  become: true

# list of config file paths
  vars:
    files_to_copy:
      - src: files/home/config/bleachbit/bleachbit.ini
        dest: /home/jack/.config/bleachbit/bleachbit.ini
        owner: jack
        group: jack
        mode: "0664"
      - src: files/home/config/vlc/vlcrc
        dest: /home/jack/.config/vlc/vlcrc
        owner: jack
        group: jack
        mode: "0600"

  tasks:

    #### APPLICATIONS ####

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Ensure required dependencies for .deb files are installed
      ansible.builtin.apt:
        name: gdebi-core
        state: present

    - name: Fetch the latest Balena Etcher release URL
      uri:
        url: https://api.github.com/repos/balena-io/etcher/releases/latest
        return_content: yes
      register: etcher_release

    - name: Extract the download URL for the Balena Etcher .deb package
      set_fact:
        etcher_deb_url: "{{ etcher_release.json.assets | selectattr('browser_download_url', 'search', 'amd64.deb$') | map(attribute='browser_download_url') | first }}"

    - name: Download the latest Balena Etcher .deb package
      get_url:
        url: "{{ etcher_deb_url }}"
        dest: /tmp/balena-etcher-electron.deb

    - name: Install Balena Etcher
      command: gdebi --non-interactive /tmp/balena-etcher-electron.deb

    - name: Clean up the .deb package
      file:
        path: /tmp/balena-etcher-electron.deb
        state: absent

    - name: Get the latest VeraCrypt download URL
      ansible.builtin.uri:
        url: "https://www.veracrypt.fr/en/Downloads.html"
        return_content: yes
      register: veracrypt_download_page

    - name: Extract VeraCrypt .deb file URL for Ubuntu 24.04
      ansible.builtin.set_fact:
        veracrypt_deb_url: >
          {{ 
            (veracrypt_download_page.content | regex_findall('https://.*?veracrypt-[0-9._]+-Ubuntu-24.04.*amd64.deb') | first)  | replace('&#43;', '+')
          }}

    - name: Download the VeraCrypt .deb file
      ansible.builtin.get_url:
        url: "{{ veracrypt_deb_url }}"
        dest: /tmp/veracrypt.deb

    - name: Install VeraCrypt from .deb file
      ansible.builtin.command:
        cmd: "gdebi -n /tmp/veracrypt.deb"

    - name: Clean up downloaded .deb file
      ansible.builtin.file:
        path: /tmp/veracrypt.deb
        state: absent

    - name: install all apt packages
      package: # ansible module to use for this task
        name: 
          # utilities
          - baobab # disk usage analyser
          - bleachbit # cleaning utility
          #- brave-browser # not available in all repos
          - chromium-browser
          #- cobang # repo added above
          #- codium # repo added above
          - curl
          - freefilesync
          - gdebi-core # required dependency for installing .deb files, likely already satisfied by default
          - gnome-disk-utility # disks
          - gparted
          - grsync
          - hardinfo # gui hardware overview
          - htop
          - keepassxc
          - nextcloud-desktop
          - openssh-server
          - remmina # remote desktop client
          #- signal-desktop # repo added above
          - sublime-text # custom repo may be required
          - tlp # battery optimisation
          - tmux # advanced terminal
          # media
          - drawing # paint clone
          - calibre # ebook manager
          - puddletag
          - rhythmbox
          - vlc
          - yt-dlp
          #- pinta # snap only?
        state: present

    #### OS SETTINGS ####

    - name: Copy wallpaper file
      copy:
        src: files/wallpapers/spectrum_curves.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root

    #### CONFIG FILES ####

    - name: Ensure destination directories exist and set permissions
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "0755"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.dest }}"

    - name: Copy config files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.src }}"
