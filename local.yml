---
- hosts: localhost
  connection: local
  become: true

  vars:
    files_to_copy:
      - src: files/home/config/bleachbit/bleachbit.ini
        dest: /home/jack/.config/bleachbit/bleachbit.ini
        owner: jack
        group: jack
        mode: "0664"
      - src: files/home/config/vlc/vlcrc
        dest: /home/jack/.config/vlc/vlcrc
        owner: jack
        group: jack
        mode: "0600"

  tasks:

    #### APPLICATIONS ####

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Ensure required dependencies for .deb files are installed
      ansible.builtin.apt:
        name: gdebi-core
        state: present

    - name: Check if Etcher is installed
      command: dpkg-query -W -f='${Version}' balena-etcher-electron
      register: etcher_installed
      failed_when: false
      changed_when: false

    - name: Fetch the latest Balena Etcher release URL
      uri:
        url: https://api.github.com/repos/balena-io/etcher/releases/latest
        return_content: yes
      register: etcher_release

    - name: Extract the download URL for the Balena Etcher .deb package
      set_fact:
        etcher_deb_url: "{{ etcher_release.json.assets | selectattr('browser_download_url', 'search', 'amd64.deb$') | map(attribute='browser_download_url') | first }}"

    - name: Extract Etcher version from URL
      set_fact:
        etcher_latest_version: "{{ etcher_deb_url | regex_search('etcher-electron-([0-9.]+)', '\\1') }}"

    - name: Show detected Etcher version
      debug:
        msg: >
          Installed: {{ etcher_installed.stdout | default('NOT INSTALLED') }},
          Latest: {{ etcher_latest_version | default('UNKNOWN') }}

    - name: Download the latest Balena Etcher .deb package
      get_url:
        url: "{{ etcher_deb_url }}"
        dest: /tmp/balena-etcher-electron.deb
      when: etcher_installed.stdout is not defined or etcher_installed.stdout != etcher_latest_version

    - name: Install Balena Etcher
      command: gdebi --non-interactive /tmp/balena-etcher-electron.deb
      when: etcher_installed.stdout is not defined or etcher_installed.stdout != etcher_latest_version

    - name: Clean up the .deb package
      file:
        path: /tmp/balena-etcher-electron.deb
        state: absent
      when: etcher_installed.stdout is not defined or etcher_installed.stdout != etcher_latest_version

    - name: Check installed version of VeraCrypt
      command: veracrypt --version
      register: veracrypt_installed
      failed_when: false
      changed_when: false

    - name: Get the latest VeraCrypt download URL
      ansible.builtin.uri:
        url: "https://www.veracrypt.fr/en/Downloads.html"
        return_content: yes
      register: veracrypt_download_page

    - name: Extract VeraCrypt .deb file URL for Ubuntu 22.04
      ansible.builtin.set_fact:
        veracrypt_deb_url: >
          {{ 
            (veracrypt_download_page.content | regex_findall('https://.*?veracrypt-[0-9._]+-Ubuntu-22.04.*amd64.deb') | first)  | replace('&#43;', '+')
          }}

    - name: Extract VeraCrypt version from URL
      set_fact:
        veracrypt_latest_version: "{{ (veracrypt_deb_url | regex_search('veracrypt-([0-9.]+)', '\\1')) }}"

    - name: Skip VeraCrypt install if latest version already installed
      ansible.builtin.debug:
        msg: "VeraCrypt is already installed and up-to-date (version {{ veracrypt_latest_version }})"
      when: veracrypt_installed.stdout is defined and veracrypt_latest_version in (veracrypt_installed.stdout | string)

    - name: Download the VeraCrypt .deb file
      get_url:
        url: "{{ veracrypt_deb_url }}"
        dest: /tmp/veracrypt.deb
      when: veracrypt_installed.stdout is not defined or veracrypt_latest_version not in (veracrypt_installed.stdout | string)

    - name: Install VeraCrypt using apt
      apt:
        deb: /tmp/veracrypt.deb
      when: veracrypt_installed.stdout is not defined or veracrypt_latest_version not in (veracrypt_installed.stdout | string)

    - name: Clean up downloaded .deb file
      file:
        path: /tmp/veracrypt.deb
        state: absent
      when: veracrypt_installed.stdout is not defined or veracrypt_latest_version not in (veracrypt_installed.stdout | string)

    - name: install all apt packages
      package:
        name: 
          # utilities
          - baobab
          - bleachbit
          - curl
          - gdebi-core
          - gnome-disk-utility
          - gparted
          - grsync
          - hardinfo
          - htop
          - keepassxc
          - nextcloud-desktop
          - openssh-server
          - remmina
          - sublime-text
          - tlp
          - tmux
          # media
          - drawing
          - calibre
          - puddletag
          - rhythmbox
          - vlc
          - yt-dlp
        state: present

    #### OS SETTINGS ####

    - name: Copy wallpaper file
      copy:
        src: files/wallpapers/spectrum_curves.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root

    #### CONFIG FILES ####

    - name: Ensure destination directories exist and set permissions
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "0755"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.dest }}"

    - name: Copy config files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.src }}"
