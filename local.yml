---
- hosts: localhost
  connection: local
  become: true

  vars:
    files_to_copy:
        # autostart files 
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIR "Scripts" to be present.
      - src: files/home/config/autostart/configs-backup-script.desktop
        dest: /home/{{ gui_user }}/.config/autostart/configs-backup-script.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/ansible-pull-updater.desktop
        dest: /home/{{ gui_user }}/.config/autostart/ansible-pull-updater.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        dest: /home/{{ gui_user }}/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/syncthing-start.desktop
        dest: /home/{{ gui_user }}/.config/autostart/syncthing-start.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # menu entry files
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIRS "Scripts" and "PortableApps" to be present.
      - src: files/home/local/share/applications/ansible-pull-manual-update.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/ansible-pull-manual-update.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/config-backup-manual-run.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/config-backup-manual-run.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/veracrypt.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/veracrypt.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # config files
      - src: files/home/config/bleachbit/bleachbit.ini
        dest: /home/{{ gui_user }}/.config/bleachbit/bleachbit.ini
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"
      - src: files/home/config/vlc/vlcrc
        dest: /home/{{ gui_user }}/.config/vlc/vlcrc
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0600"
      - src: files/home/config/gtk-3.0/bookmarks
        dest: /home/{{ gui_user }}/.config/gtk-3.0/bookmarks
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"

  tasks:

    #### APT APPLICATIONS ####

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Ensure required dependencies for .deb files are installed
      ansible.builtin.apt:
        name: gdebi-core
        state: present

    - name: Install all apt packages (gracefully)
      package:
        name:
          - baobab
          - bleachbit
          - curl
          - gdebi-core
          - gnome-disk-utility
          - gparted
          - grsync
          - hardinfo
          - htop
          - keepassxc
          - nextcloud-desktop
          - openssh-server
          - pdfarranger
          - remmina
          - sqlitebrowser
          - syncthing
          - tlp
          - tree
          - tmux
          - audacity
          - drawing
          - calibre
          - puddletag
          - rhythmbox
          - soundconverter
          - vlc
          - yt-dlp
        state: present
      ignore_errors: yes

    #### FLATPAK APPLICATIONS ####

    - name: Ensure Flatpak is installed
      apt:
        name: flatpak
        state: present
        update_cache: yes

    - name: Add Flathub remote repository if not present
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      args:
        creates: /var/lib/flatpak/repo/flathub

    - name: Install Flatpak applications
      flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
      loop:
        - com.brave.Browser
        - org.chromium.Chromium
        - vn.hoabinh.quan.CoBang # qr code scanner and reader
        - org.signal.Signal
        - com.github.PintaProject.Pinta
        - md.obsidian.Obsidian
        - org.freefilesync.FreeFileSync
        - com.system76.Popsicle # usb image flasher
        - com.vscodium.codium
        - tv.plex.PlexDesktop
        - com.github.iwalton3.jellyfin-media-player
        - com.unicornsonlsd.finamp
        - org.telegram.desktop

    - name: Upgrade all flatpaks ðŸ“…
      ansible.builtin.command: flatpak update --noninteractive
      register: flatpak_update_output
      changed_when: "'app/' in flatpak_update_output.stdout"

    #### OS SETTINGS AND CONFIG FILES ####

    - name: Copy wallpaper file
      copy:
        src: files/wallpapers/pblache_colors.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root

    - name: Copy config files (gracefully)
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.src }}"
      ignore_errors: yes

    - name: Ensure symlink for SSH config is present
      ansible.builtin.file:
        src: /home/{{ gui_user }}/Scripts/Config_backups/ansible/configs-master/ssh/config
        dest: /home/{{ gui_user }}/.ssh/config
        state: link
        force: true
      ignore_errors: yes

    #### DESKTOP & APPLICATION SETTINGS ####

    - name: Get user ID for XDG_RUNTIME_DIR
      shell: "id -u {{ gui_user }}"
      register: gui_user_id
      changed_when: false

    # First, let's check what schemas are actually available
    - name: Check available gsettings schemas
      shell: gsettings list-schemas | grep -E "(nemo|cinnamon)" | head -10
      register: available_schemas
      ignore_errors: yes

    - name: Debug - Show available schemas
      debug:
        msg: "Available schemas: {{ available_schemas.stdout_lines }}"

    - name: Check current Nemo settings before changes
      shell: |
        gsettings get org.nemo.preferences default-folder-viewer 2>/dev/null || echo "not found"
        gsettings get org.nemo.desktop computer-icon-visible 2>/dev/null || echo "not found"
      become: false
      become_user: "{{ gui_user }}"
      register: current_settings
      ignore_errors: yes

    - name: Debug - Show current settings
      debug:
        msg: "Current Nemo settings: {{ current_settings.stdout_lines }}"

    # Clear any existing user overrides first
    - name: Clear existing user dconf settings that might override system settings
      shell: |
        # Reset user dconf settings for Nemo
        dconf reset -f /org/nemo/ || true
        dconf reset -f /org/cinnamon/desktop/keybindings/ || true
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: desktop_settings
      ignore_errors: yes

    - name: Create system dconf profile directory
      file:
        path: /etc/dconf/profile
        state: directory
        mode: '0755'

    - name: Create system dconf database directory
      file:
        path: /etc/dconf/db/local.d
        state: directory
        mode: '0755'

    - name: Create user dconf profile
      copy:
        content: |
          user-db:user
          system-db:local
        dest: /etc/dconf/profile/user
        mode: '0644'

    # Set the DCONF_PROFILE environment variable system-wide
    - name: Set DCONF_PROFILE environment variable in /etc/environment
      lineinfile:
        path: /etc/environment
        line: 'DCONF_PROFILE=user'
        create: yes

    - name: Create system-wide desktop settings
      copy:
        content: |
          # Nemo desktop icons
          [org/nemo/desktop]
          computer-icon-visible=false
          home-icon-visible=false
          network-icon-visible=false
          trash-icon-visible=false
          volumes-visible=false

          # Nemo file browser defaults
          [org/nemo/preferences]
          default-folder-viewer='list-view'
          default-view='list-view'
          default-sort-order='name'
          default-sort-in-reverse=false

          # Nemo list view settings
          [org/nemo/list-view]
          default-zoom-level='smaller'

          # Text editor theme
          [org/x/editor/preferences/editor]
          scheme='oblivion'

          # Cinnamon keybindings - media keys
          [org/cinnamon/desktop/keybindings/media-keys]
          shutdown=['<Primary><Alt>Delete', 'XF86PowerOff']
          logout=['<Primary><Alt>End']
          terminal=['<Primary><Alt>t', '<Super>t']
          www=['<Primary><Alt>w', '<Super>w']
          screensaver=['<Primary><Alt>l', '<Super>l']
          video-rotation-lock=@as []

          # Cinnamon keybindings - disable looking glass
          [org/cinnamon/desktop/keybindings]
          looking-glass-keybinding=@as []
          custom-list=['custom0', 'custom1', 'custom2', 'custom3', 'custom5']

          # Custom keybindings
          [org/cinnamon/desktop/keybindings/custom-keybindings/custom0]
          binding=['<Super>k', '<Primary><Alt>k']
          command='keepassxc %f'
          name='KeepassXC'

          [org/cinnamon/desktop/keybindings/custom-keybindings/custom1]
          binding=['<Super>n', '<Primary><Alt>n']
          command='xed %U'
          name='Text editor'

          [org/cinnamon/desktop/keybindings/custom-keybindings/custom2]
          binding=['<Primary><Alt>v', '<Super>v']
          command='/usr/bin/vlc --started-from-file %U'
          name='VLC'

          [org/cinnamon/desktop/keybindings/custom-keybindings/custom3]
          binding=['<Primary><Alt>f', '<Super>f']
          command='/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=finamp com.unicornsonlsd.finamp'
          name='Finamp'

          [org/cinnamon/desktop/keybindings/custom-keybindings/custom5]
          binding=['<Primary><Alt>o', '<Super>o']
          command='/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=obsidian.sh --file-forwarding md.obsidian.Obsidian @@u %U @@'
          name='Obsidian'
        dest: /etc/dconf/db/local.d/00-desktop-settings
        mode: '0644'
      tags: desktop_settings

    - name: Update dconf database
      command: dconf update
      tags: desktop_settings

    - name: Reset Nemo folder view preferences to apply default list view
      shell: |
        pkill -f nemo || true
        sleep 1
        rm -f /home/{{ gui_user }}/.config/nemo/desktop-metadata || true
        rm -rf /home/{{ gui_user }}/.local/share/gvfs-metadata || true
        rm -rf /home/{{ gui_user }}/.cache/nemo || true
      become: false
      become_user: "{{ gui_user }}"
      tags: desktop_settings
      ignore_errors: yes

    # Alternative approach: Force settings using direct gsettings with proper environment
    - name: Force Nemo settings with proper environment (fallback method)
      shell: |
        export DCONF_PROFILE=user
        export DISPLAY=:0
        export XDG_RUNTIME_DIR="/run/user/{{ gui_user_id.stdout }}"
        
        # Try to set settings directly
        gsettings set org.nemo.desktop computer-icon-visible false || true
        gsettings set org.nemo.desktop home-icon-visible false || true
        gsettings set org.nemo.desktop network-icon-visible false || true
        gsettings set org.nemo.desktop trash-icon-visible false || true
        gsettings set org.nemo.desktop volumes-visible false || true
        gsettings set org.nemo.preferences default-folder-viewer 'list-view' || true
        gsettings set org.nemo.preferences default-view 'list-view' || true
      become: false
      become_user: "{{ gui_user }}"
      tags: desktop_settings
      ignore_errors: yes

    - name: Verify settings after changes
      shell: |
        export DCONF_PROFILE=user
        echo "=== After changes ==="
        gsettings get org.nemo.preferences default-folder-viewer 2>/dev/null || echo "default-folder-viewer: not found"
        gsettings get org.nemo.desktop computer-icon-visible 2>/dev/null || echo "computer-icon-visible: not found"
      become: false
      become_user: "{{ gui_user }}"
      register: final_settings
      ignore_errors: yes

    - name: Debug - Show final settings
      debug:
        msg: "Final Nemo settings: {{ final_settings.stdout_lines }}"
