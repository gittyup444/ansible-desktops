---
- hosts: localhost
  connection: local
  become: true

  vars:
    files_to_copy:
        # autostart files 
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIR "Scripts" to be present.
      - src: files/home/config/autostart/configs-backup-script.desktop
        dest: /home/{{ gui_user }}/.config/autostart/configs-backup-script.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/ansible-pull-updater.desktop
        dest: /home/{{ gui_user }}/.config/autostart/ansible-pull-updater.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        dest: /home/{{ gui_user }}/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/syncthing-start.desktop
        dest: /home/{{ gui_user }}/.config/autostart/syncthing-start.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # menu entry files
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIRS "Scripts" and "PortableApps" to be present.
      - src: files/home/local/share/applications/ansible-pull-manual-update.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/ansible-pull-manual-update.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/config-backup-manual-run.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/config-backup-manual-run.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/veracrypt.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/veracrypt.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # config files
      - src: files/home/config/bleachbit/bleachbit.ini
        dest: /home/{{ gui_user }}/.config/bleachbit/bleachbit.ini
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"
      - src: files/home/config/vlc/vlcrc
        dest: /home/{{ gui_user }}/.config/vlc/vlcrc
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0600"
      - src: files/home/config/gtk-3.0/bookmarks
        dest: /home/{{ gui_user }}/.config/gtk-3.0/bookmarks
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"

  tasks:

    #### APPLICATIONS ####

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Ensure required dependencies for .deb files are installed
      ansible.builtin.apt:
        name: gdebi-core
        state: present

    - name: Install all apt packages (gracefully)
      package:
        name:
          - baobab
          - bleachbit
          - curl
          - gdebi-core
          - gnome-disk-utility
          - gparted
          - grsync
          - hardinfo
          - htop
          - keepassxc
          - nextcloud-desktop
          - openssh-server
          - pdfarranger
          - remmina
          - sqlitebrowser
          - syncthing
          - tlp
          - tree
          - tmux
          - audacity
          - drawing
          - calibre
          - puddletag
          - rhythmbox
          - soundconverter
          - vlc
          - yt-dlp
        state: present
      ignore_errors: yes

    #### FLATPAK ####

    - name: Ensure Flatpak is installed
      apt:
        name: flatpak
        state: present
        update_cache: yes

    - name: Add Flathub remote repository if not present
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      args:
        creates: /var/lib/flatpak/repo/flathub

    - name: Install Flatpak applications
      flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
      loop:
        - com.brave.Browser
        - org.chromium.Chromium
        - vn.hoabinh.quan.CoBang # qr code scanner and reader
        - org.signal.Signal
        - com.github.PintaProject.Pinta
        - md.obsidian.Obsidian
        - org.freefilesync.FreeFileSync
        - com.system76.Popsicle # usb image flasher
        - com.vscodium.codium
        - tv.plex.PlexDesktop
        - com.github.iwalton3.jellyfin-media-player
        - com.unicornsonlsd.finamp
        - org.telegram.desktop

    - name: Upgrade all flatpaks ðŸ“…
      ansible.builtin.command: flatpak update --noninteractive
      register: flatpak_update_output
      changed_when: "'app/' in flatpak_update_output.stdout"

    #### OS SETTINGS ####

    - name: Copy wallpaper file
      copy:
        src: files/wallpapers/pblache_colors.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root

    #### DESKTOP & APPLICATION SETTINGS ####

    - name: Get user ID for XDG_RUNTIME_DIR
      shell: "id -u {{ gui_user }}"
      register: gui_user_id
      changed_when: false

    - name: Configure Cinnamon desktop settings with gsettings
      shell: |
        # Remove all items from desktop
        gsettings set org.nemo.desktop computer-icon-visible false
        gsettings set org.nemo.desktop home-icon-visible false
        gsettings set org.nemo.desktop network-icon-visible false
        gsettings set org.nemo.desktop trash-icon-visible false
        gsettings set org.nemo.desktop volumes-visible false
        
        # Set xed text editor theme to Oblivion
        gsettings set org.x.editor.preferences.editor scheme 'oblivion'
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: desktop_settings

    - name: Kill all Nemo processes before changing view settings
      shell: |
        pkill -f nemo || true
        pkill -f nemo-desktop || true
        sleep 2
      become: false
      become_user: "{{ gui_user }}"
      tags: desktop_settings
      ignore_errors: yes

    - name: Reset all Nemo view preferences completely
      shell: |
        # Remove all Nemo view metadata and configuration
        rm -f /home/{{ gui_user }}/.config/nemo/desktop-metadata || true
        rm -rf /home/{{ gui_user }}/.local/share/gvfs-metadata || true
        rm -f /home/{{ gui_user }}/.config/nemo/accels || true
        rm -rf /home/{{ gui_user }}/.cache/nemo || true
        
        # Reset all view-related gsettings
        gsettings reset org.nemo.preferences default-folder-viewer || true
        gsettings reset org.nemo.preferences default-view || true
        gsettings reset org.nemo.preferences default-sort-order || true
        gsettings reset org.nemo.preferences default-sort-in-reverse || true
        
        # Set to list view with multiple methods
        gsettings set org.nemo.preferences default-folder-viewer 'list-view'
        gsettings set org.nemo.preferences default-view 'list-view'
        gsettings set org.nemo.list-view default-zoom-level 'standard'
        gsettings set org.nemo.preferences default-sort-order 'name'
        gsettings set org.nemo.preferences default-sort-in-reverse false
        
        # Also try the window-state approach
        gsettings set org.nemo.window-state start-with-sidebar true
        gsettings set org.nemo.window-state start-with-status-bar true
        gsettings set org.nemo.window-state start-with-toolbar true
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: desktop_settings
      ignore_errors: yes

    - name: Create Nemo configuration directory and set view preferences
      shell: |
        mkdir -p /home/{{ gui_user }}/.config/nemo
        
        # Create a custom nemo configuration that forces list view
        cat > /home/{{ gui_user }}/.config/nemo/nemo-list-view.conf << 'EOF'
        [DEFAULT]
        default-folder-viewer=list-view
        default-view=list-view
        EOF
        
        chown {{ gui_user }}:{{ gui_user }} /home/{{ gui_user }}/.config/nemo/nemo-list-view.conf || true
      tags: desktop_settings
      ignore_errors: yes

    #### KEYBOARD SHORTCUTS ####

    - name: Configure Cinnamon media-key shortcuts with gsettings
      shell: |
        gsettings set org.cinnamon.desktop.keybindings.media-keys shutdown "['<Primary><Alt>Delete', 'XF86PowerOff']"
        gsettings set org.cinnamon.desktop.keybindings.media-keys logout "['<Primary><Alt>End']"
        gsettings set org.cinnamon.desktop.keybindings.media-keys terminal "['<Primary><Alt>t', '<Super>t']"
        gsettings set org.cinnamon.desktop.keybindings.media-keys www "['<Primary><Alt>w', '<Super>w']"
        gsettings set org.cinnamon.desktop.keybindings.media-keys screensaver "['<Primary><Alt>l', '<Super>l']"
        gsettings set org.cinnamon.desktop.keybindings looking-glass-keybinding "[]"
        gsettings set org.cinnamon.desktop.keybindings.media-keys video-rotation-lock "[]"
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: keyboard_shortcuts

    - name: Configure custom keybindings with gsettings
      shell: |
        # Enable custom keybindings
        gsettings set org.cinnamon.desktop.keybindings custom-list "['custom0', 'custom1', 'custom2', 'custom3', 'custom5']"
        
        # KeepassXC shortcut
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ binding "['<Super>k', '<Primary><Alt>k']"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ command "keepassxc %f"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ name "KeepassXC"
        
        # Text editor shortcut
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ binding "['<Super>n', '<Primary><Alt>n']"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ command "xed %U"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ name "Text editor"
        
        # VLC shortcut
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ binding "['<Primary><Alt>v', '<Super>v']"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ command "/usr/bin/vlc --started-from-file %U"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ name "VLC"
        
        # Finamp shortcut
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/ binding "['<Primary><Alt>f', '<Super>f']"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/ command "/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=finamp com.unicornsonlsd.finamp"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/ name "Finamp"
        
        # Obsidian shortcut
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/ binding "['<Primary><Alt>o', '<Super>o']"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/ command "/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=obsidian.sh --file-forwarding md.obsidian.Obsidian @@u %U @@"
        gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/ name "Obsidian"
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: keyboard_shortcuts

    - name: Restart Cinnamon and Nemo to apply all settings
      shell: |
        pkill -f nemo || true
        pkill -f nemo-desktop || true
        sleep 1
        nohup nemo-desktop > /dev/null 2>&1 &
        sleep 2
        pkill -HUP cinnamon || true
        sleep 2
        pkill -f cinnamon || true
        sleep 2
        nohup cinnamon --replace > /dev/null 2>&1 &
        sleep 3
      become: false
      become_user: "{{ gui_user }}"
      environment:
        DISPLAY: ":0"
        XDG_RUNTIME_DIR: "/run/user/{{ gui_user_id.stdout }}"
      tags: [keyboard_shortcuts, desktop_settings]
      ignore_errors: yes

    #### CONFIG FILES ####

    - name: Copy config files (gracefully)
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.src }}"
      ignore_errors: yes

    - name: Ensure symlink for SSH config is present
      ansible.builtin.file:
        src: /home/{{ gui_user }}/Scripts/Config_backups/ansible/configs-master/ssh/config
        dest: /home/{{ gui_user }}/.ssh/config
        state: link
        force: true
      ignore_errors: yes
