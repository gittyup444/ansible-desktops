---
- hosts: localhost
  connection: local
  # No become at playbook level - we'll use it per task as needed
  vars:
    ansible_become_password: "{{ vault_become_password }}"
  vars_files:
    - group_vars/all/vault.yml

  vars:
    files_to_copy:
        # autostart files 
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIR "Scripts" to be present.
      - src: files/home/config/autostart/configs-backup-script.desktop
        dest: /home/{{ gui_user }}/.config/autostart/configs-backup-script.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/ansible-pull-updater.desktop
        dest: /home/{{ gui_user }}/.config/autostart/ansible-pull-updater.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        dest: /home/{{ gui_user }}/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/config/autostart/syncthing-start.desktop
        dest: /home/{{ gui_user }}/.config/autostart/syncthing-start.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # menu entry files
        # NOTE: THESE FILES ARE USER-AGNOSTIC BUT REQUIRE SYNCTHING DIRS "Scripts" and "PortableApps" to be present.
      - src: files/home/local/share/applications/ansible-pull-manual-update.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/ansible-pull-manual-update.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/config-backup-manual-run.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/config-backup-manual-run.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
      - src: files/home/local/share/applications/veracrypt.desktop
        dest: /home/{{ gui_user }}/.local/share/applications/veracrypt.desktop
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0774"
        # config files
      - src: files/home/config/bleachbit/bleachbit.ini
        dest: /home/{{ gui_user }}/.config/bleachbit/bleachbit.ini
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"
      - src: files/home/config/vlc/vlcrc
        dest: /home/{{ gui_user }}/.config/vlc/vlcrc
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0600"
      - src: files/home/config/gtk-3.0/bookmarks
        dest: /home/{{ gui_user }}/.config/gtk-3.0/bookmarks
        owner: "{{ gui_user }}"
        group: "{{ gui_user }}"
        mode: "0664"

  tasks:

    #### APT APPLICATIONS ####

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
      become: true

    - name: Ensure required dependencies for .deb files are installed
      ansible.builtin.apt:
        name: gdebi-core
        state: present
      become: true

    - name: Install all apt packages (gracefully)
      package:
        name:
          - baobab
          - bleachbit
          - curl
          - gdebi-core
          - gnome-disk-utility
          - gparted
          - grsync
          - hardinfo
          - htop
          - keepassxc
          - nextcloud-desktop
          - openssh-server
          - pdfarranger
          - remmina
          - sqlitebrowser
          - syncthing
          - tlp
          - tree
          - tmux
          - audacity
          - drawing
          - calibre
          - puddletag
          - rhythmbox
          - soundconverter
          - vlc
          - yt-dlp
        state: present
      ignore_errors: yes
      become: true

    #### FLATPAK APPLICATIONS ####

    - name: Ensure Flatpak is installed
      apt:
        name: flatpak
        state: present
        update_cache: yes
      become: true

    - name: Add Flathub remote repository if not present
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      args:
        creates: /var/lib/flatpak/repo/flathub
      become: true

    - name: Install Flatpak applications
      flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
      loop:
        - com.brave.Browser
        - org.chromium.Chromium
        - vn.hoabinh.quan.CoBang # qr code scanner and reader
        - org.signal.Signal
        - com.github.PintaProject.Pinta
        - md.obsidian.Obsidian
        - org.freefilesync.FreeFileSync
        - com.system76.Popsicle # usb image flasher
        - com.vscodium.codium
        - tv.plex.PlexDesktop
        - com.github.iwalton3.jellyfin-media-player
        - com.unicornsonlsd.finamp
        - org.telegram.desktop
      become: true

    - name: Upgrade all flatpaks ðŸ“…
      ansible.builtin.command: flatpak update --noninteractive
      register: flatpak_update_output
      changed_when: "'app/' in flatpak_update_output.stdout"
      become: true

    #### OS SETTINGS AND CONFIG FILES ####

    - name: Copy wallpaper file
      copy:
        src: files/wallpapers/pblache_colors.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root
      become: true

    - name: Copy config files (gracefully)
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ files_to_copy }}"
      loop_control:
        label: "{{ item.src }}"
      ignore_errors: yes
      become: true

    - name: Ensure symlink for SSH config is present
      ansible.builtin.file:
        src: /home/{{ gui_user }}/Scripts/Config_backups/ansible/configs-master/ssh/config
        dest: /home/{{ gui_user }}/.ssh/config
        state: link
        force: true
      ignore_errors: yes
      become: true

    #### USER DESKTOP SETTINGS (run as regular user) ####

    - name: Set Nemo desktop icons preferences
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/nemo/desktop/computer-icon-visible", value: "false" }
        - { key: "/org/nemo/desktop/home-icon-visible", value: "false" }
        - { key: "/org/nemo/desktop/network-icon-visible", value: "false" }
        - { key: "/org/nemo/desktop/trash-icon-visible", value: "false" }
        - { key: "/org/nemo/desktop/volumes-visible", value: "false" }
      # No become - run as regular user

    - name: Set Nemo file browser defaults
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/nemo/preferences/default-folder-viewer", value: "'list-view'" }
        - { key: "/org/nemo/preferences/default-view", value: "'list-view'" }
        - { key: "/org/nemo/preferences/default-sort-order", value: "'name'" }
        - { key: "/org/nemo/preferences/default-sort-in-reverse", value: "false" }
      # No become - run as regular user

    - name: Set Nemo list view settings
      dconf:
        key: "/org/nemo/list-view/default-zoom-level"
        value: "'smaller'"
      # No become - run as regular user

    - name: Set text editor theme
      dconf:
        key: "/org/x/editor/preferences/editor/scheme"
        value: "'oblivion'"
      # No become - run as regular user

    - name: Set Cinnamon media key bindings
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/shutdown", value: "['<Primary><Alt>Delete', 'XF86PowerOff']" }
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/logout", value: "['<Primary><Alt>End']" }
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/terminal", value: "['<Primary><Alt>t', '<Super>t']" }
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/www", value: "['<Primary><Alt>w', '<Super>w']" }
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/screensaver", value: "['<Primary><Alt>l', '<Super>l']" }
        - { key: "/org/cinnamon/desktop/keybindings/media-keys/video-rotation-lock", value: "@as []" }
      # No become - run as regular user

    - name: Disable looking glass keybinding
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/looking-glass-keybinding", value: "@as []" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-list", value: "['custom0', 'custom1', 'custom2', 'custom3', 'custom5']" }
      # No become - run as regular user

    - name: Set custom keybinding - KeepassXC
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/binding", value: "['<Super>k', '<Primary><Alt>k']" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/command", value: "'keepassxc %f'" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/name", value: "'KeepassXC'" }
      # No become - run as regular user

    - name: Set custom keybinding - Text editor
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/binding", value: "['<Super>n', '<Primary><Alt>n']" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/command", value: "'xed'" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/name", value: "'Text editor'" }
      # No become - run as regular user

    - name: Set custom keybinding - VLC
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/binding", value: "['<Primary><Alt>v', '<Super>v']" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/command", value: "'/usr/bin/vlc'" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/name", value: "'VLC'" }
      # No become - run as regular user

    - name: Set custom keybinding - Finamp
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/binding", value: "['<Primary><Alt>f', '<Super>f']" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/command", value: "'/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=finamp com.unicornsonlsd.finamp'" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom3/name", value: "'Finamp'" }
      # No become - run as regular user

    - name: Set custom keybinding - Obsidian
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      loop:
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/binding", value: "['<Primary><Alt>o', '<Super>o']" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/command", value: "'/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=obsidian.sh --file-forwarding md.obsidian.Obsidian @@u %U @@'" }
        - { key: "/org/cinnamon/desktop/keybindings/custom-keybindings/custom5/name", value: "'Obsidian'" }
      # No become - run as regular user

    - name: Reset Nemo folder view preferences to apply default list view
      shell: |
        pkill -f nemo || true
        sleep 1
        rm -f ~/.config/nemo/desktop-metadata || true
        rm -rf ~/.local/share/gvfs-metadata || true
        rm -rf ~/.cache/nemo || true
      ignore_errors: yes
      # No become - run as regular user
